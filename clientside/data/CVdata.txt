2018/11  Starting as freelance
    Project: Professional website, Full-Stack developer
        Windows 10, Linus Debian 9, JetBrains (IntelliJIDEA, PhpStorm, PyCharm, Datagrid), Microservices, MySQL, WAMP Server, Apache2, Tomcat, Jira, Jenkins, Github 
        Javascript, Php, React, Angular, Java/Spring, Python/Django, SQL 
        AGILE software development, continuous integration, Extreme programming
2015/10 - 2018/10  HENSOLDT GMBH Ottobrunn (former Airbus Defence)
    Products / team: IFF, (until the end), Software engineer / Full-Stack developer
        IFF interrogators, transponders and related tools, based on these products,
        Windows 7, Linux Debian 9, IoT, Eclipse, JIRA, Jenkins, DOORS, SVN, various com links [UDP/TCP IP, RS-XXX, CAN bus], ADS-B, Microservices, ADS-B, REST API
        Moxa / Aitech Embedded computer for military applications
        Java, Javascript, Php, React / Node, GNU Autotools, Asm x86 
        AGILE software development, continuous integration
2000/06 - 2015/09  Airbus Defence (former Cassidian / EADS Defence & Security),
    Products / team: IFF, (until the end), Software engineer
        IFF interrogators, transponders and related tools,
        Windows 7, Eclipse, JIRA, SVN, DOORS, various com links [UDP/TCP IP, RS-XXX], ADS-B, Kontron Embedded computer for military applications
        Java, C, Javascript, Angular, Asm x86,
        AGILE software development
    Project: CLA2000, (1 year + 3 months), Software engineer
        Air traffic control services 
        Linux, Eclipse, DOORS 
        Java, POJO 
        company internal process (~V cycle) 
    Project: LMT / GCTAM, (2 years + 4 months), Software engineer
        Supply flow handling in a military system,
        Pure Java rich client based on a multithreaded 3 tier architecture
        Windows 7, Eclipse 
        Java, Java Beans 
        Company internal process (~V cycle) 
    Project: MOIE Sic Terre, (2 years + 7 months), Software architect / Team leader (~6 developers)
        Message handling in a military communication system 
        Windows XP, Eclipse 
        Java, J2EE, EJB, POJO, OSGI, Python 
        MDA Approach, Design Patterns 
    Project: Euromale, (7 months), Software architect / Team leader (~3 developers)
        Drone video data real-time acquisition and handling,
        Multithreaded 3 tier architecture,
        Extensive use of design patterns: Creational (Abstract Factory / Builder / Factory method / Object pool / Singleton), Structural (Bridge / Facade), Behavioral (Command / Iterator / State), Concurrency (Scheduler)
        Windows XP, Web Services, BEA WebLogic, SQL db, Eclipse 
        Java, C++, .NET (C# / J#) 
        MDA Approach, Design Patterns 
    Project: Helios 2, (4 years + 5 months), Software architect / Team leader (~6 developers)
        Geographic information with image management (2D & 3D) for mission preparation and intelligence,
        Heavily multithreaded 3 tier architecture (specific Parallel handling layer / error management layer),
        Specific deployment platform (initially based on DOS/batch tools, then Emac/lisp tools))
        Windows NT, Unix/CDE, Microsoft MFC, Rational suite, Bounds Checker 
        C++, CORBA, ActiveX components 
        Rational Unified Process, Design Patterns 
1999/10 - 2000/05 
    THALES group (former ALCATEL CGA Transport)
    Project: Wayfarer, (7 month), Software architect / Team leader (~4 developers)
        Real time embedded software inside bus ticketing console,
        Virtual machine for 386EX microcontroller emulation
        Windows NT, Wayfarer BUS Ticketing Machine 
        C, C++, Visual Studio, Microsoft MFC, Asm x86 (386EX microcontroller) 
        V-Model, static & dynamic modeling (UML Diagrams),
    Project: GART, (1 month), Software developer
        Contactless smartcard demonstration application 
        Windows NT 
        C++, Visual Studio, Microsoft MFC, Serial RS-232 communication 
1998/07 - 1999/09
    ZODIAC (former INTERTECHNIQUE IN-SNEC),
    Project: EUMETSAT, (1 year + 3 months), Software developer
        Regulation and transmission for Meteosat 2nd generationsatellite,
        Heavily multithreaded data flow handling,
        Real time data treatment,
        Data encoding (Reed-Solomon, Pseudo-Randomization, Convolutional)
        Windows NT, DSP 56301
        C, C++, Windows DDK, Asm DSP 56301
        V-Model, static & dynamic modeling (UML Diagrams),
1996/01 - 1998/06 
    ATELIER (Groupe Ka)
    Project: Essential Disk Utilities, (9 months), Software developer
        VFAT disk utilities for Psion organizer (series 3 & 5): Defragmentation, Scandisk, Smart Format, Disk Editor, Psion EPOC(16/32)
        C, C++ 
        Static model, Booch diagrams 
    Project: PsiTools, (1 year), Software developer
        Save and restore utilities for Psion organizer (series 3 & 5) 
        Mac OS (6/7), Psion EPOC(16/32) 
        C, C++ 
    Project: Velvet, (9 months), Software developer
        Asynchronous parts under interrupt (there was no real multitasking available in MacOS),
        Faxing (classe 1 & 2) software,
        Device to device file transferts (X, Y and Z modem)
        Mac OS (6/7) 
        C, C++ 
1992/04 - 1995/12 
    4D - France & USA (former ACI)
    Product: , 4th Dimension, (1 year, with 6 month in USA), Software developer
        Tools for 4th dimension (RDBMS IDE):
            4D plugins. For example : smartcard handling,
            Platform Independant Extension Kit: tools and API for writing 4D plugins,
            4D Server connection API: samples & tests applications for writing 4D native clients
        Windows, Mac OS (6/7) 
        C, C++, Pascal, Asm 68K, Asm x86 
    Products: , 4th Dimension / Object Master, (2 years + 8 month), IT Technician / Software developer
        4th dimension (RDBMS IDE) hotline,
        Object Master (C/C++/Pascal/Modula2 IDE) hotline,
            Development problems handling,
            Samples and tools writing
        Mac OS (6/7), Windows 
        4th Dimension, C, C++, Pascal, Modula2 
1986/10 - 1992/03 
    Centre d’Essai des Propulseurs de Saclay (DGA), GEET, LTC...
    General: , (5 years + 5 month), Software developer
        [Database development. EDM.
        [MS-DOS, Mac OS.
        [Dbase2, 4th Dimension, DOS cmds
        

What are my obvious strengths?:
NOTE: please visit my Github repositories
The languages I used intensively are
    C ( <= C11)
    Java ( <= Java 8)
(the very first language I learned was :Pascal:)
Then I did lots of
    C++ ( <= C++98)
    Javascript
I have already used the following languages
    C++11
    Python
    C# (and J#...)
    SQL (MySQL & PostgreSQL)
    DOS/batch, Perl
    Asm 68K / x86
    Fortran 77
I have already used the following technologies
    GNU Autotools
    .NET
    J2EE(with EJB & POJO), OSGi, Corba
    jQuery, Angular, React, Spring
I have already used the following technologies
    JIRA, Jenkins, Github, SVN
    Enterprise Architect:,
    Eclipse, JetBrains (PhpStorm, IntelliJIDEA, DataGrip...), Emacs:
I can write DO-278 compliant software
I can work in an AGILE environment
Skills I'm currently improving
    Spring framework ( + Hibernate, + microservices )
    Angular
    React
In the end, last-but-not-least "almost useless" experience with
    Old C++ STL:, "standard template library". The first version was available in Symantec C++, circa. 1994
    Microsoft's Visual C++ / MFC:
    Rational Rose:
    BEA WebLogic:
What can I do for you?:
Software architecture: / architectural advice
application development:
    'standard monolithic': or as :microservices: architectured
    writing C / C++ / Java / Javascript / Python source code
    using external libraries (Qt, boost…), NPM packages, Packagist packages...
    accessing specific kind of resource or hardware through network or serial port, using :REST API: as communication protocol for example
    Deploying on a standard station running Windows or Linux, or an embedded microcontroller as well, with or without real-time OS
Web development:
    HTML / Client side : Javascript raw, Javascript with Angular, Javascript with React
    Server side: Php, Java Spring (/Boot), (Node) React native
Extension / middleware: development. For example: an Eclipse plugin
Device driver: development (C / C++)
How it normally goes:
Specifications writing
Requirement analysis
Modelling phase
Additional / optional preparations
    With legacy project: Analysis of existing { anything }, Evolution / Modification
    In any case: Preparatory study / Model
Partial deliveries including
    Implementation / unit tests / Remarks and corrections cycle for Lower / primitive layer, Middle / business layer, Presentation layer
    Note1: It will at least be possible to give access to sources through GitHub in a private repository, for example, always accompanied by means of tests
    Note2: with an AGILE approach, specific { Requirement analysis / modelling } phase may apply there
Final delivery
Maintenance
70€ <  my standard hourly cost < 100€, according to the options
